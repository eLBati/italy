-
  I call the wizards
-
  !record {model: riba.emissione, id: riba_emissione_1, view: emissione_riba_view}:
    configurazione: sbf_riba_config
-
  I run the wizards
-
  !python {model: riba.emissione}: |
    invoice = self.pool['account.invoice'].browse(
      cr, uid, ref('account_invoice_riba'), context=context)
    for move_line in invoice.move_id.line_id:
      if move_line.account_id.id == ref('account.a_recv'):
        riba_move_line_id = move_line.id
        break
    action = self.crea_distinta(cr, uid, [ref("riba_emissione_1")], {"lang": 'en_US',
      "tz": False, "active_model": "account.move.line", "active_ids": [riba_move_line_id],
      "active_id": riba_move_line_id, })
    riba_list_id = action['res_id']
    list_pool = self.pool['riba.distinta']
    list_pool.confirm(cr, uid, [riba_list_id], context=context)
    list = list_pool.browse(cr, uid, riba_list_id)
    assert (list.state == 'accepted'), ("RiBa list is not accepted, but %s" % list.state)
    invoice.refresh()
    assert (invoice.state == 'paid'), ("Invoice state is not paid, but %s" % invoice.state)
    accreditation_pool = self.pool['riba.accreditation']
    accr_context = {
        "lang": 'en_US',
        "tz": False,
        "active_model": "riba.distinta",
        "active_ids": [riba_list_id],
        "active_id": riba_list_id, 
        }
    accr_id = accreditation_pool.create(cr, uid, {
      'bank_amount': 445,
      'expense_amount': 5,
      }, context=accr_context)
    accreditation_pool.create_move(cr, uid, [accr_id], context=accr_context)
    list.refresh()
    assert (list.state == 'accredited'), ("RiBa list is not accredited, but %s" % list.state)
